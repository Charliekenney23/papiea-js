#import stuff

// Initialize Papiea
// Initialize papiea engine
func (papiea papiea) initialize() papiea, err {
    // Load databases
    papiea.status_db // initialize db connection
    papiea.spec_db // initialize db connection
    papiea.providers_db // initialize db connection

    // Sets up the rest api engine
    papiea.api = new rest.api()

    // Start admin facing apis
    papiea.admin_facing_apis()

    // Start providers facing apis
    papiea.provider_facing_api()

    // Start user facing apis
    papiea.user_facing_api()
}

// Admin Facing APIs
func (papiea_apis papiea_api_ctx) admin_facing_apis() err {
    papiea_apis.api.post(papiea_apis.prefix+"/providers", func(req, res) {
        register_or_upgrade_provider(req.provider_description)
    })
}

// Provider Facing APIS
func (papiea_apis papiea_api_ctx) provider_facing_api() err {
    // Registering Provider Facing APIs
    api = papiea_apis.api
    papiea_prefix = papiea_apis.prefix

    api.post(papiea_prefix+"/on", func(req, res) {
        // callback url is being generated by the papiea provider library and passed on the request
        papiea_apis.register_intentful_callback(req.signature, req.callback_url)
    })

    api.post(papiea_prefix+"/procedure", func(req, res) {
        // callback url is being generated by the papiea provider library and passed on the request
        papiea_apis.register_procedural_callback(req.signature, req.callback_url)
    })

    // Status update is only exposed to providers. Users can't update status
    api.post(papiea+"/status", func(req, res) {
        res.status(update_status_in_db(req.uuid, req.status) ? 200 : 400)
        return res;
    })
}



// User Facing APIs
func (papiea papiea) user_facing_apis() err {
    registered_providers = papiea.providers_db.list_providers()

    for _, provider := range registered_providers {
        for _, kind := range provider.kinds{

        }
    }
}
